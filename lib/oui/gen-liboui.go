// +build ignore

package main

import (
	"bufio"
	"fmt"
	"io"
	"net/http"
	"regexp"
	"sort"
	"strconv"
	"strings"
)

const (
	src = "https://raw.githubusercontent.com/wireshark/wireshark/master/manuf"
)

var (
	reEntry = regexp.MustCompile(`(?i)([0-9A-F]{2}:[0-9A-F]{2}:[0-9A-F]{2})\t(\S+)\t(.+)`)
)

func main() {
	resp, err := http.Get(src)
	if err != nil {
		panic(err)
	}
	if resp.StatusCode != 200 {
		panic(fmt.Errorf("non-200 status code for %s: %d", src, resp.StatusCode))
	}

	defer resp.Body.Close()

	r := bufio.NewReader(resp.Body)
	k := make([]int, 0)
	v := make([]string, 0)
	for {
		line, err := r.ReadString('\n')

		if err != nil {
			if err == io.EOF {
				break
			}
			panic(err)
		}
		if match := reEntry.FindStringSubmatch(line); len(match) == 4 {
			xid, err := strconv.ParseUint(strings.Replace(match[1], ":", "", -1), 16, 32)
			if err != nil {
				panic(err)
			}
			k = append(k, int(xid))
			v = append(v, match[3])
		}
	}
	sort.Ints(k)

	fmt.Printf(`package oui
// This file is auto-generated by gen-liboui.go - DO NOT MODIFY.
import "net"

var db = map[uint32]string{
`)
	for i, id := range k {
		fmt.Printf("\t%d: %q,\n", id, v[i])
	}
	fmt.Printf(`
}

func Lookup(hw net.HardwareAddr) (string, bool) {
    if len(hw) < 3 {
        return "", false
    }
    d := uint32(hw[0]) << 16 + uint32(hw[1]) << 8 + uint32(hw[2])
    val, ok := db[d]
    return val, ok
}

// END AUTO GENERATED GO FILE.
`)
}
